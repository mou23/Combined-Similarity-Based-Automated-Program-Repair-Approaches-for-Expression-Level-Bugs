   ____ _____     _ _               
  / ___|__  /___ | | |_ __ _ _ __   
 | |  _  / // _ \| | __/ _` | '__| 
 | |_| |/ /| (_) | | || (_| | |     
  \____/____\___/|_|\__\__,_|_| 

Name 	 Type 	 Default 	 Description
INCLUDE_SUSPICIOUSNESS_VALUE 	 Boolean 	 true 	 When enable a verbose spectra will be printed
candidate_generation_algorithm 	 CandidateGeneration 	 STACCATO 	 Candidage Generation Algorithm (Values: [STACCATO])
classesDir 	 String 	  	 Path of classes directory
classes_file 	 String 	 classes 	 File in which the list of classes is stored
coefficients 	 Coefficient[] 	 [OCHIAI] 	 Diagnose coefficients
configurationID 	 String 	  	 Configuration ID of the experiment
deps 	 String[] 	  	 All depedencies (e.g., jar files) of the project under test
enable_assertions_for_gzoltar 	 Boolean 	 true 	 Checks assertions when running GZoltar
extra_matrix_file 	 String 	  	 Coverage of a previous generated matrix
faulty_components 	 String 	  	 Faulty components ID (format <class canonical name>{<method name#line number. Can define more than one faulty component by using a ':' separated list
filter_spectra 	 FilterSpectra 	 TEST_CASES_WITHOUT_ANY_COVERAGE 	 Filter Spectra (Values: [NONE, TEST_CASES_WITHOUT_ANY_COVERAGE, COMPONENTS_TRIGGERED_BY_FAILING_TEST_CASES])
granularity 	 Granularity 	 STATEMENT 	 Granularity level of instrumentation (Values: [STATEMENT, METHOD, CLASS])
gzoltar_classloader 	 Boolean 	 true 	 If enable, the classloader used to load each class is the GZoltar classloader
gzoltar_context_classloader 	 Boolean 	 true 	 If enable, the context classloader used to run the test suite(s) / case(s) is the GZoltar classloader
gzoltar_data_dir 	 String 	 gzoltar-data 	 Directory name where all output of GZoltar is saved
include_deprecated_classes 	 Boolean 	 true 	 If enable deprecated classes will also be considered
include_deprecated_methods 	 Boolean 	 true 	 If enable deprecated methods will also be considered
include_local_classes 	 Boolean 	 true 	 If enable inner/anonymous classes will also be included
instrument_test_classes 	 Boolean 	 false 	 If enable, coverage of test classes will also be considered
is_running_a_gzoltar_test 	 Boolean 	 false 	 Specify that a GZoltar test is running. To be used only for debugging/testing purposes
loglevel 	 LogLevel 	 INFO 	 Verbosity level of logger (Values: [NONE, INFO, DEBUG])
major_javac 	 String 	  	 Javac executable of Major framework
matrix_file 	 String 	 matrix 	 Coverage matrix file name
max_client_memory 	 Integer 	 1024 	 Maximum memory (in MB) allocated for the GZ-client
max_perm_size 	 Integer 	 256 	 MaxPermSize (in MB) for the client process
minimization_strategy 	 MinimizationStrategy 	 GREEDY 	 Minimization strategy (Values: [CSP, GREEDY])
minion_exec 	 String 	  	 Path to the Minion's executable
minion_num_solutions 	 Integer 	 -1 	 Maximum limit of solutions (-1 enables 'all solutions')
minion_timeout 	 Integer 	 60 	 Maximum time (in seconds) allowed to execute MINION (-1 allows infinite time)
mutant_dir 	 String 	  	 Mutant directory
mutants 	 Integer 	 -1 	 Mutants ID
mutants_dir 	 String 	 mutants 	 Directory to where mutants will be exported
mutants_log 	 String 	 mutants.log 	 File with information about the generated mutants
mutation_backend 	 MutationBackend 	 MAJOR 	 Mutation framework (Values: [MAJOR, PIT, CUSTOM])
mutation_strategy 	 MutationStrategy 	 METALLAXIS 	 Mutation strategy (Values: [METALLAXIS, MUSE])
native_libraries 	 String[] 	  	 Native libraries (i.e., *.so, *.dll, *.jnilib) of the project under test
normalize_spectra 	 Boolean 	 true 	 If enable, the suspiciousness values are normalized
number_of_test_runs_in_parallel 	 Integer 	 -1 	 Number of tests that can be executed in parallel. (-1 to use all available processors)
only_run_tests_that_cover_component 	 Boolean 	 true 	 If enable, only test cases that cover a component 'c' are executed on mutants of 'c'
output_variables 	 StatisticsVariables[] 	 [NUMBER_OF_CLASSES, NUMBER_OF_TEST_CLASSES, NUMBER_OF_UNIT_TEST_CASES, NUMBER_OF_COMPONENTS, AMBIGUITY_GROUPS, INFORMATION_GAIN, RHO] 	 Statistics variables to be saved. Can define more than one variable by using a ':' separated list
print_matrix 	 Boolean 	 true 	 If enable coverage matrix is returned to a file
print_spectra 	 Boolean 	 true 	 If enable spectra data is returned to a file
projectID 	 String 	  	 Name of the project under test
project_cp 	 String 	  	 Classpath of the Project Under Test (i.e., classes directory, test-classes directory, jar files, or class files
search_for_classes_on_jar_files 	 Boolean 	 false 	 
serialize_spectra 	 Boolean 	 false 	 If enable, a spectra object is serialized to a file
show_progress_bar 	 Boolean 	 true 	 If enable, shows a progress bar on console
sourcedir 	 String 	  	 Source directory
spectra_file 	 String 	 spectra 	 Spectra file name
star 	 Integer 	 2 	 Star value used on DStar suspiciousness formula
statistics_backend 	 StatisticsBackend 	 CSV 	 Statistics backend (Values: [NONE, CONSOLE, CSV])
statistics_file 	 String 	 statistics.csv 	 Statistics CSV file name
strategy 	 Strategy 	 COVERAGE 	 Diagnose strategy (Values: [COVERAGE, MUTATION])
targetclasses 	 String[] 	 [*] 	 Target class(es) to diagnose. A fully qualifying needs to be provided, e.g. org.foo.SomeClass. Can define more than one class by using a ':' separated list
targetpackages 	 String[] 	  	 Target package(es) to diagnose. Can define more than one package by using a ':' separated list
test_timeout 	 Integer 	 60 	 Maximum time (seconds) allowed to execute a test class or a test case depending on the test strategy used. (-1 allows infinite time)
testclasses 	 String[] 	 [*] 	 Test class(es) to execute. A fully qualifying needs to be provided, e.g. org.foo.TestSomeClass. Can define more than one test by using a ':' separated list
testpackages 	 String[] 	  	 Test package(es) to execute. Can define more than one test package by using a ':' separated list
testsDir 	 String 	  	 Path of tests directory
tests_file 	 String 	 tests 	 File in which the list of test-classes is stored
timelimit 	 Integer 	 600 	 Maximum time (seconds) allowed to execute GZoltar (-1 allows infinite time)
unique_line_numbers 	 Boolean 	 true 	 When true, instrumentation takes into account whether there are multiple bytcode instructions for a single line number
verbose_spectra 	 Boolean 	 true 	 When enable a verbose spectra will be printed
